%% Name and Group Number
%Rosina Comatas, Kyleigh Driscoll,
%% Import Data
% Please remember that this code must prompt the user for the file name.Use
% funvtion inputdlg(). Having done so, use the filename input to import
% your data set. Plot the data set to assure that it is importing the
% correct data. You are allowed to ask the user for if the data set came
% from a healthy or infracted heart.
fileName = importdata('C:\Users\Rosina\Documents\MATLAB\sham1.csv');


%%


%% Define the variables



%% Set sampling frequency
Fs = 250; % Hz

%% Design and Apply Low-Pass Filter to Raw Data Set
% Here, use designfilt() to design a lowpass filter. You may use an if
% statement to switch between different lowpass filters for infracter and
% healthy hearts.Adjust the passband frequency in order that you know that
% the signal is properly filtered. Also, plot the unfiltered and filtered
% signal to display the improvement made by filtering.
if heartstate == 1
    %filter for healthy hearts
elseif heartstate == 2
   %filter for infracted hearts 
else
    disp('Invalid Heart State input. Please try again.');
end


%% Plot Filtered Data


%% Identify Local Maxima and Count for Heartbeats
% You may use previous code you have created in earlier labs to perfrom
% local maxima detection on the filtered signal. You should set your
% thresholds here. However, please remember to CHANGE YOUR VARIABLE
% NAMES. Tip - preallocate vectors of zeros to save time and processing power.
% It takes longer for the CPU to append to a vector than to change a vector
% value.


%% Find peaks (Systolic)
% Use the findpeaks() function to find the peaks of the cleaned signal.
% Plot the peaks over the cleaned signal to prove that your threshold is
% correct.

%% Find Minima (Diastolic) (inverted data set)
% Do the same as with the systolic, however invert the signal in order to
% find the diastolic minima occurance which now looks like a peak and thus you are able to use findpeaks(). Plot the occurances of the minima on
% the original filtered signal to prove that your threshold is correct.


%% Maximum Developed Pressure
% Maximum developed pressure is the mean of the difference between the
% systolic and diastolic pressures. However, please remember that you may
% have more diastolic points than systolic points depending on when the
% recording starts during the heart beat! Use an if statement to adjust
% which systolic pressure to use (first recorded value or second)!



%% Maximum rate of pressure increase 
% Take the derivative of the filtered signal and find the peaks using the
% findpeaks() function once more. Please plot the differentiated signal and
% the peaks in order to prove that your are finding the peaks.
derivolt=diff(voltage);


%% Minimum rate of pressure increase
% Do the same as above, however you would apply the findpeaks() function to
% the inverted derivative vector to find the minima. Plot the minimum rates
% of pressure increase on the derivative graph to show that your threshold
% was adequate.


%% Validation of minima dp/dt and minima
% Plot the original filtered signal, but now with where the max and minimum
% change in pressures noted. Best way to do so is to take the occurances of
% the minima and maxima (which should be samples) and plot it against the
% original signal values at those occurances(aka samples).




%% Diastolic Time Constant
% Find the diastolic time constant over a time range as noted in lecture.
% Please see the pressureerror and the pressureeqn Matlab functions and
% scripts provided by the Professor. Remeber to acount for if the first
% diastolic value occurs after the first minimum dp/dt value (use an if
% loop). Plot to shhow how well the curve fits the original signal (or if
% it works at all!) This is the hardest part of the final project, so don't
% get discouraged if you have issues in this section.

overalltime = [];
overallmag = [];
tao_estimate = [];

for i = 1:length(minima)-1
 
 timex = time(region);
overalltime = [overalltime timex'];
% Define starting point
% [Po,P1,tau]
P0 = [1 1 1];
% Lower bounds
lb = [0 0 .00001];
% Upper bounds
ub = [Inf Inf Inf];

anonfunc = @(P) pressureerror(P,timex,voltage(region));

%fitted_pressure = pressureeqn(Pest,timex);
Pest = fmincon(anonfunc,P0,[],[],[],[],lb,ub);

tao_estimate = [tao_estimate Pest(3)];

fin = pressureeqn(Pest,timex);
overallmag = [overallmag fin'];
end



%% Final Display of all Parameters to perform t and p tests on 
%Finally display your average diastolic and systolic pressures, your
%maximum deveoped pressure, your tau, and your maximum and minimum dp/dt
%values for the user to see on the command window. And thats it :D


